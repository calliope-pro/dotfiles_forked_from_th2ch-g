#!/bin/sh

set -e

# Requirement: rsa_key, server_name.txt, config, tmux

# Usage
USAGE='
tas:
    tmux_all_server

USAGE:
    tas -c [COMMAND] -f [FILE]

DESCRIPTION:
    Run tmux locally and split the screen into 4x4.
    From there, login to the remote server and send the same command

EXAMPLE:
    tas                      Send top command
    tas -c "echo hoge"       Send "echo hoge" command

OPTIONS:
    -h, --help                  Print help
    -c, --command [COMMAND]     Message to be sent to the server [default: top]
    -f, --file [FILE]           Server name file path [default: $HOME/.ssh/server_name.txt]
'


# default setting
COMMAND="top"
FILE="$HOME/.ssh/server_name.txt"



# option parser
while :;
do
    case $1 in
        -h | --help)
            echo "$USAGE" >&1
            exit 0
            ;;
        -c | --command) OPTARG=$2
            COMMAND=$OPTARG
            shift
            ;;
        -f | --file) OPTARG=$2
            FILE=$OPTARG
            if [ -z $FILE ]; then
                echo "[ERROR] file path is necesary, if -f/--flag options is present" >&2
                exit 1
            fi
            shift
            ;;
        --)
            shift
            break
            ;;
        -?*)
            echo "[ERROR] Unknown option : ${1}" >&2
            exit 1
            ;;
        *)
            break
    esac
    shift
done
echo "[INFO] start sending command \"$COMMAND\"" >&1


# file check
if [ ! -e $FILE ]; then

    echo "[ERROR] $FILE not exists" >&2
    exit 1

fi

server_arr=(`cat $FILE | xargs`)


tmux_window_name=tas_${COMMAND}


# Make tmux window
tmux new -s $tmux_window_name -d

tmux split-window -h
tmux split-window -h
tmux select-pane -t 0
tmux split-window -h


for i in 0 4 8 12;
do
    tmux select-pane -t $i
    tmux split-window -v
    tmux select-pane -t $i
    tmux split-window -v
    tmux select-pane -t $(( $i + 2 ))
    tmux split-window -v
done


# Login server
count=0
for i in ${server_arr[@]};
do
    echo "[INFO] Login server to \"$i\"" >&1
    tmux send-keys -t $count "ssh $i" C-m
    count=$(( $count + 1 ))
done

# wait 3 seconds
sleep 3

# Send command
count=0
for i in ${server_arr[@]};
do
    tmux send-keys -t $count "$COMMAND" C-m
    count=$(( $count + 1 ))
done


echo "[INFO] Send command to Server done" >&1

echo "[INFO] tmux ls Result" >&1
tmux ls

tmux a

