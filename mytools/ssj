#!/bin/sh

set -e

# Requirement: rsa_key, server_name.txt, config

USAGE='
ssj:
    server_search_jobs

USAGE:
    ssj -n [TARGET_NAME] -f [FILE]

DESCRIPTION:
    This is a script to check if a job remains on the server

EXAMPLE:
    ssj -n "cargo"                  Search jobs named "cargo"
    ssj -n "$USER"                  Search jobs named "$USER"

OPTIONS:
    -h, --help                      Print help
    -n, --name [TARGET_NAME]        Target name for Search
    -f, --file [FILE]               Server name file, For stdin, use "-f -"
                                    [default: ~/.ssh/server_name.txt]
'

# default setting
FILE="$HOME/.ssh/server_name.txt"

# option parser
while :;
do
    case $1 in
        -h | --help)
            echo "$USAGE" >&1
            exit 0
            ;;
        -n | --name) OPTARG=$2
            TARGET_NAME=$OPTARG
            if [ -z "$TARGET_NAME" ]; then
                echo "[ERROR] target name is necessary" >&2
                exit 1
            fi
            shift
            ;;
        -f | --file) OPTARG=$2
            FILE="$OPTARG"
            if [ -z "$FILE" ]; then
                echo "[ERROR] file path is necessary, if -f/--file option is present" >&2
                exit 1
            fi
            shift
            ;;
        --)
            shift
            break
            ;;
        -?*)
            echo "[ERROR] Unknown option : ${1}" >&2
            exit 1
            ;;
        *)
            break
    esac
    shift
done


# file check
if [ $FILE = "-" ]; then
    echo "[INFO] execute file input by stdin" >&1
    server_arr=(`cat - | xargs`)
else
    echo "[INFO] execute file input by file path \"$FILE\"" >&1
    if [ ! -e $FILE ]; then
        echo "[ERROR] $FILE not exists" >&2
        exit 1
    fi
    server_arr=(`cat $FILE | xargs`)
fi

if [ -z "$TARGET_NAME" ]; then
    echo "[ERROR] target name is necessary" >&2
    exit 1
fi


for i in ${server_arr[@]};
do
    echo "[INFO] Search $i" >&1 && ssh $i ps ax | grep -v "\[" | grep "$TARGET_NAME" && echo
done
wait && echo "[INFO] Search_Jobs_Result done" >&1
