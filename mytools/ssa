#!/bin/sh

set -e

# Requirement: config, server_name.txt, rsa_key

USAGE='
ssa:
    search_server_availability

USAGE:
    ssa
    cat [SERVER_NAME_FILE] | ssa -f -
    ssa -f [SERVER_NAME_FILE] -t 20
    ssa --dump > ~/.ssh/server_name.txt

DESCRIPTION:
    search server availavility by load average

OPTIONS:
    -h, --help          Print help
    -d, --dump          prepare server name list file
    -f, --file          specify server name list file. "-f -" means stdin.
                        [default: ~/.ssh/server_name.txt]
    -t, --thread        number of thread when ssh. [default: 8]
                        If number of thread exceeds number of logical cpu, bug may occur.
'

# default setting
FILE="$HOME/.ssh/server_name.txt"
dump_flag=1
num_thread=8

# option parser
while :;
do
    case $1 in
        -h | --help)
            echo "$USAGE" >&1
            exit 0
            ;;
        -d | --dump)
            dump_flag=0
            break
            ;;
        -f | --file)
            FILE=$2
            if [ -z $FILE ]; then
                echo "[ERROR] file path is necessary, if -f/--file is present" >&2
                exit 1
            fi
            shift
            ;;
        -t | --thread)
            num_thread=$2
            if [ -z $num_thread ]; then
                echo "[ERROR] number of thread is necessary, if -t/--thread is present" >&2
                exit 1
            fi
            shift
            ;;
        --)
            shift
            break
            ;;
        -?*)
            echo "[ERROR] Unknown option : ${1}" >&2
            exit 1
            ;;
        *)
            break
    esac
    shift
done


# dump server name list file
if [ $dump_flag -eq 0 ]; then
    cat ~/.ssh/config | grep "Host" | grep -v "HostName" | grep -v "git" | grep -v "*" | awk '{print $2}'
    exit 0
fi


# file input
#temp=$(mktemp)
temp=tmp_ssa.txt
echo "<server> <users> <load_average>" > $temp
echo "[INFO] temp file is $temp" >&1
echo "[INFO] number of thread is $num_thread" >&1
if [ $FILE = "-" ]; then
    echo "[INFO] file input is execute by stdin" >&1
    cat - | xargs -I SERVER -P $num_thread ssh SERVER 'echo "$(hostname) $(uptime)"' \
        | awk '{split($0, arr, " "); for(i in arr){if(arr[i] ~ /average/){la=arr[i+1]} if(arr[i] ~ /user/){user=arr[i-1]}} print $1, user, la}' \
        | sort -n -k 1 >> $temp
else
    echo "[INFO] file input is execute by path \"$FILE\"" >&1
    if [ ! -e $FILE ]; then
        echo "[ERROR] $FILE is not exists" >&2
        exit 1
    fi
    cat $FILE | xargs -I SERVER -P $num_thread ssh SERVER 'echo "$(hostname) $(uptime)"' \
        | awk '{split($0, arr, " "); for(i in arr){if(arr[i] ~ /average/){la=arr[i+1]} if(arr[i] ~ /user/){user=arr[i-1]}} print $1, user, la}' \
        | sort -n -k 1 >> $temp
fi

echo "[INFO] result:" >&1
cat $temp | column -s " " -t | while IFS= read -r line; do echo "  $line"; done >&1

echo "[INFO] recommend server (load average < 1.0)" >&1
cat $temp | column -s " " -t | awk '{if($3 < 1){print $0}}' | while IFS= read -r line; do echo "  $line"; done >&1

rm -f $temp
