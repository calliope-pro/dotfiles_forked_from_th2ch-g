#!/bin/sh

set -e

# Requirement: tmux

# Usage
USAGE='
tide:
    My Integrated Development Environment using Tmux (tmux_ide)

USAGE:
    tide -n [WINDOW_NAME] -t [WINDOW_TYPE]

DESCRIPTION:
    Terminal partitioning for development environment using Tmux.

EXAMPLE:
    tide                     Make tmux named "home"
    tide -n Rust             Make tmux named "Rust"
    tide -t 2                Make window type 2 (2x2 window)

OPTIONS:
    -h, --help              Print help
    -n, --name [NAME]       Name of tmux window [default: home]
    -t, --type {1,2}        Type of window. Choose {1, 2}. type1 means 2+3 window, type2 means 2x2 window [default: 1]
'

# default setting
tmux_window_name="home"
window_type="1"


# option parser
while :;
do
    case $1 in
        -h | --help)
            echo "$USAGE" >&1
            exit 0
            ;;
        -n | --name) OPTARG=$2
            if [ -z "$OPTARG" ]; then
                echo "[ERROR] WINDOW_NAME is necessary, if -n/--name option is present" >&2
                exit 1
            fi
            tmux_window_name=$OPTARG
            shift
            ;;
        -t | --type) OPTARG=$2
            if [ -z "$OPTARG" ]; then
                echo "[ERROR] window_type is necessary, if -t/--type options is present" >&2
                exit 1
            fi
            if [ $OPTARG == "1" ]; then
                echo "[INFO] window type is \"type1\"" >&1
                window_type="1"
            elif [ $OPTARG == "2" ]; then
                echo "[INFO] window type is \"type2\"" >&1
                window_type="2"
            else
                echo "[ERROR] window_type is must be \"1\" or \"2\"" >&2
                exit 1
            fi
            shift
            ;;
        --)
            shift
            break
            ;;
        -?*)
            echo "[ERROR] Unknown option : ${1}" >&2
            exit 1
            ;;
        *)
            break
    esac
    shift
done
echo "[INFO] Start making tmux named \"$tmux_window_name\"" >&1


tmux new -s $tmux_window_name -d


if [ $window_type == "1" ]; then
    tmux split-window -h
    tmux split-window -v
    tmux split-window -v
    tmux select-pane -t 0
    tmux split-window -v
    tmux select-pane -t 2 && tmux resize-pane -D 35
    tmux select-pane -t 4 && tmux resize-pane -D 8
    tmux send-keys -t 4 "top" C-m
    tmux select-pane -t 0
fi


if [ $window_type == "2" ]; then
    tmux split-window -h
    tmux split-window -v
    tmux select-pane -t 0
    tmux split-window -v
    tmux send-keys -t 3 "top" C-m
    tmux select-pane -t 0
fi


echo "[INFO] Make tmux named \"$tmux_window_name\""
echo "[INFO] tmux ls Result" >&1
tmux ls

tmux a

